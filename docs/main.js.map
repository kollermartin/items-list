{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/features/actions/items.action.ts","./src/app/features/add-item/add-item.component.ts","./src/app/features/add-item/add-item.component.html","./src/app/features/item-detail/item-detail.component.ts","./src/app/features/item-detail/item-detail.component.html","./src/app/features/list-items/list-item/list-item.component.ts","./src/app/features/list-items/list-item/list-item.component.html","./src/app/features/list-items/list-items.component.ts","./src/app/features/list-items/list-items.component.html","./src/app/services/items.service.ts","./src/app/shared/snack-bar/snack-bar.component.ts","./src/app/shared/snack-bar/snack-bar.component.html","./src/app/state/items.state.ts","./src/app/tools/generate-id.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'item-list';\n}\n","<div class=\"container\">\n  <app-add-item></app-add-item>\n  <app-list-items></app-list-items>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { ListItemsComponent } from './features/list-items/list-items.component';\nimport { AddItemComponent } from './features/add-item/add-item.component';\nimport { FormGroupDirective, ReactiveFormsModule } from '@angular/forms';\nimport { NgxsModule } from '@ngxs/store';\nimport { ItemsState } from './state/items.state';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ItemDetailComponent } from './features/item-detail/item-detail.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { ListItemComponent } from './features/list-items/list-item/list-item.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatIconModule} from '@angular/material/icon';\nimport { SnackBarComponent } from './shared/snack-bar/snack-bar.component';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { provideFirebaseApp, getApp, initializeApp } from '@angular/fire/app';\nimport { getFirestore, provideFirestore } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\nimport { AngularFireModule } from '@angular/fire/compat';\nimport { AngularFireAuthModule } from '@angular/fire/compat/auth';\nimport { AngularFireStorageModule } from '@angular/fire/compat/storage';\nimport { AngularFirestoreModule } from '@angular/fire/compat/firestore';\nimport { AngularFireDatabaseModule } from '@angular/fire/compat/database';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListItemsComponent,\n    AddItemComponent,\n    ItemDetailComponent,\n    ListItemComponent,\n    SnackBarComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    NgxsModule.forRoot([ItemsState]),\n    BrowserAnimationsModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatInputModule,\n    HttpClientModule,\n    MatIconModule,\n    MatSnackBarModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    AngularFireStorageModule,\n    AngularFireDatabaseModule\n  ],\n  providers: [FormGroupDirective],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Item} from 'src/app/models/item';\n\nexport class AddItem {\n  static readonly type = '[Items] Add Item';\n\n  constructor(public payload: Item) {\n  }\n}\n\nexport class EditItem {\n  static readonly type = '[Items] Edit Item';\n\n  constructor(public payload: Item) {\n  }\n}\n\nexport class GetItems {\n  static readonly type = '[Items] Get Items';\n\n  constructor() {\n  }\n}\n\nexport class RemoveItem {\n  static readonly type = '[Items] Remove Item';\n\n  constructor(public payload: Item) {\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, FormGroup, Validators, FormGroupDirective } from '@angular/forms';\nimport { Store } from '@ngxs/store';\nimport { GenerateId } from 'src/app/tools/generate-id';\nimport { AddItem } from '../actions/items.action';\nimport { Item } from 'src/app/models/item';\n\n@Component({\n  selector: 'app-add-item',\n  templateUrl: './add-item.component.html',\n  styleUrls: ['./add-item.component.scss']\n})\nexport class AddItemComponent implements OnInit {\n\n  public formGroup = this.formBuilder.group({\n    name: ['', Validators.required]\n  })\n\n  constructor(private formBuilder: UntypedFormBuilder, private store: Store, private formDirective: FormGroupDirective ) { }\n\n  ngOnInit(): void {\n  }\n\n  public onSubmit() {\n    this.store.dispatch(new AddItem({name: this.formGroup.get('name').value, id: GenerateId.generate()}));\n    this.formGroup.reset();\n  }\n}\n","<form [formGroup]=\"formGroup\">\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Item name</mat-label>\n        <input type=\"text\" matInput [formControl]=\"formGroup.controls['name']\">\n        <mat-error *ngIf=\"formGroup.controls['name'].hasError('required')\">\n          Item name is <strong>required</strong>\n        </mat-error>\n      </mat-form-field>\n    <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"onSubmit()\" [disabled]=\"!formGroup.valid\">Add</button>\n</form>\n","import { DialogRef } from '@angular/cdk/dialog';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Store } from '@ngxs/store';\nimport { Item } from 'src/app/models/item';\nimport { ItemsState } from 'src/app/state/items.state';\nimport { EditItem } from '../actions/items.action';\n\n@Component({\n  selector: 'app-item-detail',\n  templateUrl: './item-detail.component.html',\n  styleUrls: ['./item-detail.component.scss'],\n})\nexport class ItemDetailComponent implements OnInit {\n  public itemFormGroup = this.fb.group({\n    id: [''],\n    name: ['', Validators.required],\n  });\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: string,\n    private store: Store,\n    private fb: FormBuilder,\n    private dialogRef: DialogRef\n  ) {}\n\n  ngOnInit(): void {\n    this.getItem();\n    this.itemFormGroup.get('id').disable();\n  }\n\n  public submit(): void {\n    this.store.dispatch(new EditItem({name: this.itemFormGroup.get('name').value, id: this.itemFormGroup.get('id').value}));\n    this.dialogRef.close();\n  }\n\n  public close(): void {\n    this.dialogRef.close();\n  }\n\n  private getItem(): void {\n    this.store.select(ItemsState.getItem(this.data)).subscribe((item: Item) => {\n      this.itemFormGroup.patchValue({\n        id: item.id,\n        name: item.name,\n      });\n    });\n  }\n}\n","<h1 mat-dialog-title>Item</h1>\n<div mat-dialog-content>\n    <form [formGroup]=\"itemFormGroup\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>ID</mat-label>\n        <input type=\"text\" matInput [formControl]=\"itemFormGroup.controls['id']\">\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Name</mat-label>\n        <input type=\"text\" matInput [formControl]=\"itemFormGroup.controls['name']\">\n        <mat-error *ngIf=\"itemFormGroup.controls['name'].hasError('required')\">\n          Item name is <strong>required</strong>\n        </mat-error>\n      </mat-form-field>\n    </form>\n</div>\n<div mat-dialog-actions class=\"actions\">\n  <button mat-stroked-button (click)=\"close()\">Close</button>\n  <button type=\"submit\" mat-raised-button color=\"primary\" cdkFocusInitial (click)=\"submit()\" [disabled]=\"!itemFormGroup.valid\">Save</button>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { Store } from '@ngxs/store';\nimport { Item } from 'src/app/models/item';\nimport { SnackBarComponent } from 'src/app/shared/snack-bar/snack-bar.component';\nimport { RemoveItem } from '../../actions/items.action';\nimport { ItemDetailComponent } from '../../item-detail/item-detail.component';\n\n@Component({\n  selector: 'app-list-item',\n  templateUrl: './list-item.component.html',\n  styleUrls: ['./list-item.component.scss']\n})\nexport class ListItemComponent implements OnInit {\n\n  @Input() item: Item;\n\n  constructor(private dialog: MatDialog, private store: Store, private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n\n  public openModal(id: string): void {\n    this.dialog.open(ItemDetailComponent, {\n      data: id\n    });\n  }\n\n  public removeItem(): void {\n    this.store.dispatch(new RemoveItem(this.item));\n  }\n}\n","<div class=\"item\">\n    <span class=\"item__name\">{{item.name}}</span>\n    <div class=\"item__action\">\n        <button mat-stroked-button  color=\"primary\" (click)=\"openModal(item.id)\"><mat-icon>edit</mat-icon></button>\n        <button mat-flat-button  color=\"primary\" (click)=\"removeItem()\"><mat-icon>delete</mat-icon></button>\n    </div>\n</div>","import {Component, OnInit} from '@angular/core';\nimport {Select, Store} from '@ngxs/store';\nimport {Observable} from 'rxjs';\nimport {Item} from 'src/app/models/item';\nimport {ItemsState} from 'src/app/state/items.state';\nimport {GetItems} from '../actions/items.action';\n\n\n@Component({\n  selector: 'app-list-items',\n  templateUrl: './list-items.component.html',\n  styleUrls: ['./list-items.component.scss']\n})\nexport class ListItemsComponent implements OnInit {\n\n  @Select(ItemsState.getItems) items: Observable<Item[]>;\n\n  constructor(private store: Store) {\n  }\n\n  ngOnInit(): void {\n    this.loadItems();\n  }\n\n  private loadItems(): void {\n    this.store.dispatch(new GetItems()).subscribe(() => console.log('items loaded'), () => console.log('failed to load items'));\n  }\n}\n","<div class=\"items-container\">\n    <ng-container *ngFor=\"let item of items | async\">\n        <app-list-item [item]=\"item\"></app-list-item>\n    </ng-container>\n</div>\n","import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {AngularFireList, AngularFireObject} from '@angular/fire/compat/database';\nimport {AngularFirestore} from '@angular/fire/compat/firestore';\nimport {getDatabase, ref, set, get, child, remove, update} from 'firebase/database';\nimport {Observable} from 'rxjs';\nimport {Item} from '../models/item';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemsService {\n\n  private readonly dbPath = 'todos/';\n  private todosRef: AngularFireList<Item>;\n  private todoRef: AngularFireObject<Item>;\n  items: Observable<any>;\n\n  constructor(private http: HttpClient, private db: AngularFirestore) {\n  }\n\n  public getItems(): Promise<any> {\n    return get(ref(getDatabase(), 'todos'));\n  }\n\n  public postItem(item: Item): Promise<void> {\n    const db = getDatabase();\n    return set(ref(db, this.dbPath + item.id), {...item});\n  }\n\n  public removeItem(id: string): Promise<void> {\n    const db = getDatabase();\n    return remove(ref(db, this.dbPath + id));\n  }\n\n  public updateItem(item: Item): Promise<void> {\n    return update(ref(getDatabase(), this.dbPath + item.id), item);\n  }\n}\n","import { Component, Inject, Input, OnInit } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-snack-bar',\n  templateUrl: './snack-bar.component.html',\n  styleUrls: ['./snack-bar.component.scss']\n})\nexport class SnackBarComponent implements OnInit {\n\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: string) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>{{data}}</p>\n","import {Injectable} from '@angular/core';\nimport {Item} from '../models/item';\nimport {Action, createSelector, Select, Selector, State, StateContext, Store} from '@ngxs/store';\nimport {AddItem, EditItem, GetItems, RemoveItem} from '../features/actions/items.action';\nimport {ItemsService} from '../services/items.service';\nimport {map, tap} from 'rxjs/operators';\n\nexport interface ItemsStateModel {\n  items: Item[];\n}\n\n@State<ItemsStateModel>({\n  name: 'items',\n  defaults: {\n    items: []\n  }\n})\n\n@Injectable()\nexport class ItemsState {\n\n  constructor(private itemsService: ItemsService) {\n  }\n\n  @Selector()\n  static getItems(state: ItemsStateModel): Item[] {\n    return state.items;\n  }\n\n  static getItem(id: string) {\n    return createSelector([ItemsState], (state: ItemsStateModel) => {\n      return state.items.find(item => item.id === id);\n    });\n  }\n\n  @Action(GetItems) getItems(ctx: StateContext<ItemsStateModel>): void {\n    this.itemsService.getItems().then((snapshot) => {\n      if (snapshot.exists()) {\n        ctx.patchState({items: Object.values(snapshot.val())});\n      } else {\n        console.log('No data available');\n      }\n    });\n\n  }\n\n  @Action(AddItem) addItem(ctx: StateContext<ItemsStateModel>, {payload}: AddItem): void {\n    const state = ctx.getState();\n\n    this.itemsService.postItem(payload).then(() => {\n      ctx.patchState({\n        items: [...state.items, payload]\n      });\n    });\n  }\n\n  @Action(EditItem) editItem(ctx: StateContext<ItemsStateModel>, {payload}: EditItem): void {\n    const state = ctx.getState();\n    const editedItem = state.items.find(item => item.id === payload.id);\n    const indexOfEditedItem = state.items.indexOf(editedItem);\n    const newItems = [...state.items];\n\n    newItems[indexOfEditedItem] = {...payload};\n\n    this.itemsService.updateItem(payload).then(() => ctx.patchState({items: newItems}));\n  }\n\n  @Action(RemoveItem) removeItem(ctx: StateContext<ItemsStateModel>, {payload}: RemoveItem): void {\n    this.itemsService.removeItem(payload.id).then(() => {\n      ctx.patchState({\n        items: ctx.getState().items.filter(item => item.id !== payload.id)\n      });\n    });\n  }\n}\n","export class GenerateId {\n    public static generate(): string {\n        var S4 = function () {\n            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n        };\n        return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\n    }\n}","export const environment = {\n  production: false,\n  firebaseConfig : {\n    apiKey: \"AIzaSyBsgH_tSHmfMaAl70hC3n7_5kSQtWztWjQ\",\n    authDomain: \"todo-list-4f92d.firebaseapp.com\",\n    databaseURL: \"https://todo-list-4f92d-default-rtdb.europe-west1.firebasedatabase.app\",\n    projectId: \"todo-list-4f92d\",\n    storageBucket: \"todo-list-4f92d.appspot.com\",\n    messagingSenderId: \"196863795289\",\n    appId: \"1:196863795289:web:ed660bd982fd706821d148\"\n  }\n};","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}