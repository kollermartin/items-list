{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/features/actions/items.action.ts","./src/app/features/add-item/add-item.component.ts","./src/app/features/add-item/add-item.component.html","./src/app/features/item-detail/item-detail.component.ts","./src/app/features/item-detail/item-detail.component.html","./src/app/features/list-items/list-items.component.ts","./src/app/features/list-items/list-items.component.html","./src/app/models/item.ts","./src/app/state/items.state.ts","./src/app/tools/generate-id.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'item-list';\n}\n","<div class=\"container\">\n  <app-add-item></app-add-item>\n  <app-list-items></app-list-items>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { ListItemsComponent } from './features/list-items/list-items.component';\nimport { AddItemComponent } from './features/add-item/add-item.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgxsModule } from '@ngxs/store';\nimport { ItemsState } from './state/items.state';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ItemDetailComponent } from './features/item-detail/item-detail.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListItemsComponent,\n    AddItemComponent,\n    ItemDetailComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    NgxsModule.forRoot([ItemsState]),\n    BrowserAnimationsModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatInputModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Item } from \"src/app/models/item\";\r\n\r\nexport class AddItem {\r\n    static readonly type = '[Items] Add Item'\r\n\r\n    constructor(public payload: Item){}\r\n}\r\n\r\nexport class EditItem {\r\n    static readonly type = '[Items] Edit Item'\r\n\r\n    constructor(public payload: Item){}\r\n}","import { Component, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Store } from '@ngxs/store';\nimport { GenerateId } from 'src/app/tools/generate-id';\nimport { AddItem } from '../actions/items.action';\nimport { Item } from 'src/app/models/item';\n\n@Component({\n  selector: 'app-add-item',\n  templateUrl: './add-item.component.html',\n  styleUrls: ['./add-item.component.scss']\n})\nexport class AddItemComponent implements OnInit {\n\n  public formGroup = this.formBuilder.group({\n    name: ['', Validators.required]\n  })\n\n  constructor(private formBuilder: UntypedFormBuilder, private store: Store) { }\n\n  ngOnInit(): void {\n  }\n\n  public onSubmit() {\n    this.store.dispatch(new AddItem(new Item(this.formGroup.get('name').value, GenerateId.generate())));\n  }\n}\n","<form [formGroup]=\"formGroup\" (ngSubmit)=\"onSubmit()\">\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Item</mat-label>\n        <input type=\"text\" matInput [formControl]=\"formGroup.controls['name']\">\n        <mat-error *ngIf=\"formGroup.controls['name'].hasError('required')\">\n          Item name is <strong>required</strong>\n        </mat-error>\n      </mat-form-field>\n    <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!formGroup.valid\">Add</button>\n</form>","import { DialogRef } from '@angular/cdk/dialog';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Store } from '@ngxs/store';\nimport { Item } from 'src/app/models/item';\nimport { ItemsState } from 'src/app/state/items.state';\nimport { EditItem } from '../actions/items.action';\n\n@Component({\n  selector: 'app-item-detail',\n  templateUrl: './item-detail.component.html',\n  styleUrls: ['./item-detail.component.scss'],\n})\nexport class ItemDetailComponent implements OnInit {\n  public itemFormGroup = this.fb.group({\n    id: [''],\n    name: ['', Validators.required],\n  });\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: string,\n    private store: Store,\n    private fb: FormBuilder,\n    private dialogRef: DialogRef\n  ) {}\n\n  ngOnInit(): void {\n    this.getItem();\n    this.itemFormGroup.controls['id'].disable();\n  }\n\n  public submit(): void {\n    this.store.dispatch(new EditItem(new Item(this.itemFormGroup.controls['name'].value, this.itemFormGroup.controls['id'].value)))\n    this.dialogRef.close();\n  }\n\n  public close(): void {\n    this.dialogRef.close();\n  }\n\n  private getItem(): void {\n    this.store.select(ItemsState.getItem(this.data)).subscribe((item: Item) => {\n      this.itemFormGroup.patchValue({\n        id: item.id,\n        name: item.name,\n      });\n    });\n  }\n}\n","\n\n<h1 mat-dialog-title>Item</h1>\n<div mat-dialog-content>\n    <form [formGroup]=\"itemFormGroup\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>ID</mat-label>\n        <input type=\"text\" matInput [formControl]=\"itemFormGroup.controls['id']\">\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Name</mat-label>\n        <input type=\"text\" matInput [formControl]=\"itemFormGroup.controls['name']\">\n        <mat-error *ngIf=\"itemFormGroup.controls['name'].hasError('required')\">\n          Item name is <strong>required</strong>\n        </mat-error>\n      </mat-form-field>\n    </form>\n</div>\n<div mat-dialog-actions class=\"actions\">\n  <button mat-stroked-button (click)=\"close()\">Close</button>\n  <button type=\"submit\" mat-raised-button color=\"primary\" cdkFocusInitial (click)=\"submit()\" [disabled]=\"!itemFormGroup.valid\">Ok</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { Item } from 'src/app/models/item';\nimport { ItemsState } from 'src/app/state/items.state';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ItemDetailComponent } from '../item-detail/item-detail.component';\n\n@Component({\n  selector: 'app-list-items',\n  templateUrl: './list-items.component.html',\n  styleUrls: ['./list-items.component.scss']\n})\nexport class ListItemsComponent implements OnInit {\n\n  public items: Observable<Item[]> = this.store.select(ItemsState.getItems);\n\n  constructor(private store: Store, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  public openModal(id: string): void {\n    this.dialog.open(ItemDetailComponent, {\n      data: id,\n      width: '25vw'\n    });\n  }\n}\n","<ul>\n    <li class=\"item\" *ngFor=\"let item of items | async\">\n        <span class=\"item__name\">{{item.name}}</span>\n        <button mat-stroked-button class=\"item__action\" color=\"primary\" (click)=\"openModal(item.id)\">edit</button>\n    </li>\n</ul>\n","export class Item {\r\n    constructor(public name, public id){}\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { Item } from \"../models/item\";\r\nimport { Action, createSelector, Select, Selector, State, StateContext } from '@ngxs/store';\r\nimport { AddItem, EditItem } from \"../features/actions/items.action\";\r\n\r\nexport interface ItemsStateModel {\r\n    items: Item[];\r\n}\r\n\r\n@State<ItemsStateModel>({\r\n    name: 'items',\r\n    defaults: {\r\n        items: []\r\n    }\r\n})\r\n\r\n@Injectable()\r\nexport class ItemsState {\r\n\r\n    @Selector()\r\n    static getItems(state: ItemsStateModel) {\r\n        return state.items;\r\n    }\r\n\r\n    static getItem(id: string) {\r\n       return createSelector([ItemsState], (state: ItemsStateModel) => {\r\n        return state.items.find(item => item.id === id);\r\n       })\r\n    }\r\n\r\n    @Action(AddItem)\r\n    addItem(ctx: StateContext<ItemsStateModel>, {payload}: AddItem){\r\n        const state = ctx.getState();\r\n\r\n        ctx.patchState({\r\n            items: [...state.items, payload]\r\n        });\r\n    }\r\n\r\n    @Action(EditItem)\r\n    editItem(ctx: StateContext<ItemsStateModel>, {payload}: EditItem) {\r\n        const state = ctx.getState();\r\n        const editedItem = state.items.find(item => item.id === payload.id);\r\n        const indexOfEditedItem = state.items.indexOf(editedItem);\r\n        const newItems = [...state.items];\r\n        \r\n        newItems[indexOfEditedItem] = {...payload};\r\n\r\n        ctx.patchState({\r\n            items: newItems\r\n        })\r\n    }\r\n\r\n\r\n}","export class GenerateId {\r\n    public static generate(): string {\r\n        var S4 = function () {\r\n            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        };\r\n        return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}